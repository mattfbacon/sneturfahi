use crate::span::Span;

#[derive(Debug, Clone, Copy)]
pub enum Selmaho {
	A,
	Bai,
	Bahe,
	Be,
	Bei,
	Beho,
	Bihe,
	Bihi,
	Bo,
	Boi,
	Bu,
	By,
	Cai,
	Caha,
	Cei,
	Cehe,
	Co,
	Coi,
	Cu,
	Cuhe,
	Daho,
	Doi,
	Dohu,
	Fa,
	Faha,
	Faho,
	Fehe,
	Fiho,
	Foi,
	Fuha,
	Fuhe,
	Fuho,
	Ga,
	Gaho,
	Gehu,
	Gi,
	Giha,
	Goi,
	Goha,
	Guha,
	I,
	Ja,
	Jai,
	Joi,
	Johi,
	Ke,
	Kei,
	Kehe,
	Ki,
	Koha,
	Ku,
	Kuhe,
	Kuho,
	La,
	Lau,
	Lahe,
	Lehu,
	Li,
	Lihu,
	Loho,
	Lohu,
	Lu,
	Luhu,
	Mai,
	Maho,
	Me,
	Mehu,
	Moi,
	Mohe,
	Mohi,
	Na,
	Nai,
	Nahe,
	Nahu,
	Nihe,
	Niho,
	Noi,
	Nu,
	Nuha,
	Nuhi,
	Nuhu,
	Pa,
	Pehe,
	Peho,
	Pu,
	Raho,
	Roi,
	Sa,
	Se,
	Sei,
	Sehu,
	Si,
	Soi,
	Su,
	Tahe,
	Tei,
	Tehu,
	To,
	Toi,
	Tuhe,
	Ui,
	Va,
	Vau,
	Vei,
	Veha,
	Veho,
	Viha,
	Vuho,
	Vuhu,
	Xi,
	Y,
	Zaho,
	Zei,
	Zeha,
	Zi,
	Zihe,
	Zo,
	Zoi,
	Zohu,

	Brivla,
	Cmevla,

	UnknownCmavo,
	/// Whenever the text is not recognized. May occur in valid Lojban, between, for example, the delimiters of `zoi` constructs, but not necessarily.
	AnyText,
}

#[derive(Debug)]
pub struct Token<'a> {
	pub experimental: bool,
	pub span: Span<'a>,
	pub selmaho: Selmaho,
}
